----------------------------------------
-- File: 'commissartactic.ai'
-- Edited by Thudmeizer @ 29.02.2016
-- Edited by Arkhan 	@ 02.12.2005

class 'CommissarTactic' (GuardInfantryTactic)

Commissar = {}

function CommissarTactic:__init( squad_ai ) super( squad_ai )

	self:SetName("Commissar Tactic")

	-- Squad is able to occupy bunkers
	self.m_bBunkerSquad = true
	
	-- Init execute delay time
	Commissar.NextExecuteCheck = 0
end

function CommissarTactic:IsAttacker()
	return self:IsCommanderAttacker()
end

function CommissarTactic:IsDefender()
	return self:IsCommanderDefender()
end

function CommissarTactic:InitAbilities()

	-- Init ability ID's
	if (Commissar.execute_id == nil or Commissar.NextExecuteCheck == nil) then
		Commissar.execute_id = cpu_manager.stats:GetAbilityID( "guard_commissar_execute" )
		Commissar.NextExecuteCheck = iGMT
	end
	if (Commissar.run_id == nil) then
		Commissar.run_id = cpu_manager.stats:GetAbilityID( "all_run!" )	
	end
end

function CommissarTactic:DoAbilities()

	-- TargetSelf: When attached to squad, executes one of his own soldiers to increase their fighting potential
	if (self.squad_ai:IsAttached() and self.squad_ai:IsAttacking() and self.squad_ai:CanDoAbility(Commissar.execute_id)) then
		if (self.squad_ai:GetNumTroopers() > 3) then
		
			-- Use execute ability
			self.squad_ai:DoSpecialAbility(Commissar.execute_id) 
			--Commissar.NextExecuteCheck = g_iGMT + 20
		end
	end

	-- Run if safe
	if ((not self.squad_ai:IsInCombat() and self.squad_ai:IsInStateMove()) or self.stateID ~= Tactic.StateID.NoState) then

		-- If I am safe I can run
		if (self.squad_ai:CanDoAbility( Commissar.run_id )) then
			self.squad_ai:DoSpecialAbility( Commissar.run_id )
		end
	end
end

function CommissarTactic:Update()

	if (self:IsComplete()) then
		return
	end
	
	-- State machine
	if (not InfantryTactic.Update(self)) then
		return
	end
	
	-- Attach to squad
	self:TryAttachSquad(false, false, 1000, 60, nil)
end
 