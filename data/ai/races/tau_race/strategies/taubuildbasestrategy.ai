----------------------------------------
-- File: 'taubuildbasestrategy.ai'
-- Edited by Thudmeizer @ 16.11.2016
-- Edited by Cylarne_04 2011

class 'TauBuildBaseStrategy' (BuildBaseStrategy)

function TauBuildBaseStrategy:__init( baseinfo ) super( baseinfo )

	-- Add detector units (Best first, worst last)
	self:AddDetectorUnit("tau_pathfinder_squad")
	self:AddDetectorUnit("tau_vespid_auxiliary_squad")
	self:AddDetectorUnit("tau_ethereal_squad")
	
	-- Phases of attacks. If army is decreased substantially, or build only titans: modify.
	self.m_iArmyBuild = math.random(0, 4) -- 4 phases total. If 4 armies was defeated, stop creating armies as it is pointless. Build titans and focus on build order strategy.
	self.m_iArmyHighestStrength = 0 -- Maximum possible army strength I ever had.

	-- Build first HQ at start pos
	self.m_iNumHQAtStartPos = 1

	-- Determine Kauyon or Mont'ka selection
	self.m_iPathResearch = math.random( 0,1 )

	-- dark40k - set items that need bypass for CpuPrerequisites
	CpuPrerequisites2.AddSpecialItem("addon_tau_turret_probe", CpuPrerequisites.BT_AddOn)
end

function TauBuildBaseStrategy:ChooseBuildProgram()

	-- Check build program count
	if (table.getn(self.info.BuildPrograms) ~= 4) then
		return BuildBaseStrategy.ChooseBuildProgram(self)
	end

	-- Get map size and closest enemy distance
	local sMapSize, iClosestEnemyDistance = self:GetMapSize()
		
	-- Set probabilities of the strategies according to the map size
	local iBuildProgram1	-- Kauyon
	local iBuildProgram2	-- Montka
	
	if (sMapSize == "small" or iClosestEnemyDistance <= 70 or cpu_manager.iPlayerCount == 2) then
	
		iBuildProgram1 = 50
		iBuildProgram2 = 50
		
	elseif (sMapSize == "large" and cpu_manager.iPlayerCount >= 6) then
	
		iBuildProgram1 = 60
		iBuildProgram2 = 40
	else
	
		iBuildProgram1 = 40
		iBuildProgram2 = 60
	end
		
	-- Now choose a program
	local iRandom = math.random(1, 100)
	if (iRandom <= iBuildProgram1) then
		return 1
	elseif (iRandom <= iBuildProgram2) then
		return 2
	end
	return 1
end

function TauBuildBaseStrategy:EvaluateSquadCap()
	
	-- Check if any buildings are in production
	local iBuildingID = cpu_manager.stats:GetBuildingID("tau_research_building")
	if (self:PlanExists("Build Building Plan", iBuildingID)) then
		return
	end

	-- Check squad and support cap
	if (self:CheckSquadCap(250, 250) or self:CheckSupportCap(300, 300)) then
		
		-- Build this building
		local tBuildType = CpuBuildType()
		tBuildType.btype = CpuPrerequisites.BT_Building
		tBuildType.name = "tau_research_building"
		if (self:TryBuild( tBuildType )) then
			aitrace("BuildController: Dynamic build of "..tBuildType.name)
		end
		return
	end
end

function TauBuildBaseStrategy:GetBuildingName( sType )

	-- Return race specific object string
	if (sType == "HQ") then
		return "tau_hq"
		
	elseif (sType == "Generator") then
		return "tau_plasma_generator"
		
	elseif (sType == "BiggerGenerator") then
		return "tau_thermoplasma_generator"
		
	elseif (sType == "VehicleBuilding") then
		return "tau_vehicle_building"
		
	elseif (sType == "ListeningPost") then
		return "tau_listening_post"
		
	elseif (sType == "Turret") then
		return "tau_turret"
		
	elseif (sType == "Mine") then
		return "tau_mines"
	end
	return nil
end

function TauBuildBaseStrategy:GetAddonBuilding( sType )

	if (sType == "addon_tau_list_post_1") then
		return "tau_listening_post"
		
	elseif (sType == "addon_tau_list_post_2") then
		return "tau_listening_post"
		
	elseif (sType == "addon_tau_turret") then
		return "tau_turret"

	elseif (sType == "addon_tau_turret_probe") then
		return "tau_turret"

	elseif (sType == "addon_superweapon") then
		return "tau_arka_ion_cannon"

	elseif (sType == "addon_tau_shield") then
		return "tau_shield_generator"
	end
	return nil
end

-- Returns the squad cap and support cap of the given squad
function TauBuildBaseStrategy:GetUnitStats(sSquadName)

	if (sSquadName == "tau_stealth_team_squad") then
		return 1, 0
	elseif (sSquadName == "tau_shasui_fire_warrior_bodyguard_sp") then
		return 1, 0
	elseif (sSquadName == "tau_fire_warrior_squad") then
		return 2, 0
	elseif (sSquadName == "tau_kroot_carnivore_squad") then
		return 2, 0
	elseif (sSquadName == "tau_pathfinder_squad") then
		return 2, 0
	elseif (sSquadName == "tau_stealth_team_xv25_squad") then
		return 2, 0
	elseif (sSquadName == "tau_kroot_hound_squad") then
		return 3, 0
	elseif (sSquadName == "tau_broadside_battlesuit_squad") then
		return 4, 0
	elseif (sSquadName == "tau_vespid_auxiliary_squad") then
		return 6, 0
	elseif (sSquadName == "tau_xv9_hazard_suit_squad") then
		return 7, 0
	elseif (sSquadName == "tau_broadside_battlesuit_xv8_squad") then
		return 5, 0
	elseif (sSquadName == "tau_crisis_suit_squad") then
		return 5, 0
	elseif (sSquadName == "tau_xv81_crisis_suit_squad") then
		return 6, 0
	elseif (sSquadName == "tau_tetra_squad") then
		return 0, 1
	elseif (sSquadName == "tau_devilfish_troop_carrier") then
		return 0, 1
	elseif (sSquadName == "tau_piranha_squad") then
		return 0, 1
	elseif (sSquadName == "tau_orca_dropship_squad") then
		return 0, 2
	elseif (sSquadName == "tau_drone_harbinger_squad") then
		return 0, 2
	elseif (sSquadName == "tau_drone_remora_squad") then
		return 0, 2
	elseif (sSquadName == "tau_drone_squad") then
		return 0, 2
	elseif (sSquadName == "tau_skyray_squad") then
		return 0, 2
	elseif (sSquadName == "tau_sniper_drone_squad") then
		return 0, 2
	elseif (sSquadName == "tau_barracuda_squad") then
		return 0, 3
	elseif (sSquadName == "tau_hammerhead_gunship_squad") then
		return 0, 4
	elseif (sSquadName == "tau_krootox_squad") then
		return 0, 6
	end
	return 0, 0
end

function TauBuildBaseStrategy:UpdateTierLevel()

	-- Reset tier level
	self.tierLevel = 1
	
	-- Check if we have the proper research or building
	if (cpu_manager.cpu_player:IsResearchComplete("tau_apocalypse_research")) then
		self.tierLevel = 6
		return
	elseif (cpu_manager.cpu_player:IsResearchComplete("tau_path_to_destruction_research")) then
		self.tierLevel = 5
		return
	elseif (cpu_manager.cpu_player:IsResearchComplete("tau_teachings_of_kauyon_research") or cpu_manager.cpu_player:IsResearchComplete("tau_teachings_of_montka_research")) then
		self.tierLevel = 4
		return
	elseif self:GetBuildingCountByName("tau_shrine_of_montka") > 0 or self:GetBuildingCountByName("tau_shrine_of_kauyon") > 0 then
		self.tierLevel = 3
		return
	elseif self:GetBuildingCountByName("tau_research_building") > 0 then
		self.tierLevel = 2
		return
	end
end

function TauBuildBaseStrategy:BuildFlexible()

	if (self.m_iPathResearch == 1) then
		
		-- Teachings of Kauyon.	
		self:DynamicBuild("tau_shrine_of_kauyon", 1, 2, 375, 375, 0, 0)
		self:DynamicResearch("tau_teachings_of_kauyon_research", 3, 750, 950, 0, 0, nil, 0)
		self:DynamicBuild("tau_shrine_of_montka", 1, 4, 500, 500, 0, 0)		
		self:DynamicResearch("tau_teachings_of_montka_research", 5, 800, 1200, 0, 0, nil, 0)
	else
		-- Teachings of Mont'ka.
		self:DynamicBuild("tau_shrine_of_montka", 1, 2, 500, 500, 0, 0)		
		self:DynamicResearch("tau_teachings_of_montka_research", 3, 800, 1200, 0, 0, nil, 0)
		self:DynamicBuild("tau_shrine_of_kauyon", 1, 4, 375, 375, 0, 0)
		self:DynamicResearch("tau_teachings_of_kauyon_research", 5, 750, 950, 0, 0, nil, 0)
	end

	-- Locales
	local iArmyStrength = cpu_manager:GetArmyStrength()
	local iRequisition = resource_manager:GetResourceAmount():Get( ResourceAmount.RT_Requisition )
	local iPower = resource_manager:GetResourceAmount():Get( ResourceAmount.RT_Power )
	
	if (iArmyStrength >= 1000 or (iPower >= 800 and iRequisition >= 900)) then
			
		-- Dynamic research item syntax: ResearchName, MinTier, RequisitionCost, PowerCost, MinSquadCap, MinSupportCap, SquadName, SquadMinCount
		local iScoutSquads = self:CountSquads("tau_stealth_team_squad") + self:CountSquads("tau_stealth_team_xv25_squad")
		local iInfantrySquads = self:CountSquads("tau_fire_warrior_squad") + iScoutSquads
		local iKrootSquads = self:CountSquads("tau_kroot_carnivore_squad") + self:CountSquads("tau_kroot_hound_squad") + self:CountSquads("tau_krootox_squad") + self:CountSquads("tau_greater_knarloc_squad")
		local iTitanSquads = self:CountSquads("tau_manta_squad") + self:CountSquads("tau_xv202_mako_titan_squad") + self:CountSquads("tau_xv101_riptide_suit_squad") + self:CountSquads("tau_xv107_rvarna_suit_squad")
		
		-- Compute tier 1 researches
		if (self.tierLevel >= 1) then

			-- Compute stealth suit research 
			if (iScoutSquads >= 2) then
				self:DynamicResearch("tau_anti_grav_research", 1, 50, 25, 0, 0, nil, 0)
			end

			-- Compute bonus researches
			if (iArmyStrength >= 1250) then
			
				self:DynamicResearch("tau_snare_trap_research", 1, 25, 25, 0, 0, nil, 0)
				self:DynamicResearch("tau_photon_grenade_research", 1, 25, 75, 0, 0, nil, 0)
				
				-- Compute scout researches
				if (iScoutSquads >= 2) then
					self:DynamicResearch("tau_stealth_suit_damage_research", 1, 40, 40, 0, 0, nil, 0)
				end
			end
		end
		
		-- Compute tier 2 researches
		if (self.tierLevel >= 2) then
			
			-- Compute resource researches
			self:DynamicResearch("tau_power_research", 2, 200, 20, 0, 0, nil, 0)
			self:DynamicResearch("tau_requisition_research", 2, 75, 250, 0, 0, nil, 0)

			-- Compute infantry research
			if (iInfantrySquads >= 3) then
				self:DynamicResearch("tau_improved_power_source_research", 2, 50, 100, 0, 0, nil, 0)
				self:DynamicResearch("tau_max_weapons_research", 2, 75, 75, 0, 0, nil, 0)
				self:DynamicResearch("tau_emp_grenade_research", 2, 75, 75, 0, 0, nil, 0)
			end
			
			-- Compute Kroot researches
			if (iKrootSquads >= 2) then
				self:DynamicResearch("tau_feral_leap_research", 2, 75, 50, 0, 0, nil, 0)
			end

			-- Compute vehicle researches
			self:DynamicResearch("tau_missile_barrage_research", 2, 100, 100, 0, 0, nil, 0)
			self:DynamicResearch("tau_vehicle_shields_research", 2, 125, 75, 0, 0, nil, 0)
			self:DynamicResearch("tau_vehicle_health_research", 2, 160, 50, 0, 0, nil, 0)
			
			-- Compute secondary researches
			if (iArmyStrength >= 1250) then
			
				-- Compute Marker researches
				self:DynamicResearch("tau_target_lock", 2, 75, 50, 0, 0, nil, 0)

				-- Compute turret upgrades research
				self:DynamicResearch("tau_turret_upgrade1", 2, 180, 180, 0, 0, nil, 0)
			end
		end
		
		-- Compute tier 3 researches
		if (self.tierLevel >= 3) then
		
			-- Compute resource researches
			self:DynamicResearch("tau_power_research_2", 3, 350, 40, 0, 0, nil, 0)
			self:DynamicResearch("tau_requisition_research_2", 3, 100, 350, 0, 0, nil, 0)

			-- Compute infantry research
			if (iInfantrySquads >= 3) then
				self:DynamicResearch("tau_improved_metallurgy", 3, 150, 150, 0, 0, nil, 0)
			end

			-- Compute turret upgrades research
			self:DynamicResearch("tau_turret_upgrade2", 3, 390, 390, 0, 0, nil, 0)

			-- Compute listening post upgrade research
			self:DynamicResearch("tau_listening_post_upgrade", 3, 600, 240, 0, 0, nil, 0)

			-- Computer Probe Addon for emplacements if enemy has infiltrators
			if (cpu_manager:EnemyHasUnitInfiltrators() or cpu_manager:EnemyHasBaseInfiltrators()) then
				self:DynamicAddon("addon_tau_turret_probe", 5, 3, 10, 80, 0, 0, nil, nil, false)
			end

			-- Compute Wall Research
			self:DynamicResearch("all_walls_research", 3, 280, 280, 0, 0, nil, 0)

			-- Compute vehicle researches
			self:DynamicResearch("tau_vehicle_shields_research_2", 3, 150, 100, 0, 0, nil, 0)

			-- Compute secondary researches
			if (iArmyStrength >= 1750) then

				-- Compute infantry research
				if (iInfantrySquads >= 3) then
					self:DynamicResearch("tau_targeting_optics", 3, 100, 100, 0, 0, nil, 0)
				end	
				
				if (iKrootSquads >= 2) then
					self:DynamicResearch("tau_beast_blood_research", 3, 80, 30, 0, 0, nil, 0)
					self:DynamicResearch("tau_targeting_optics_kroot", 3, 100, 100, 0, 0, nil, 0)
				end	
			end
		end
		
		-- Compute tier 4 researches
		if (self.tierLevel >= 4) then
			
			-- Compute resource researches
			self:DynamicResearch("tau_power_research_3", 4, 500, 60, 0, 0, nil, 0)
			self:DynamicResearch("tau_requisition_research_3", 4, 125, 450, 0, 0, nil, 0)
			
			-- Computer Relic researches
			self:DynamicResearch("tau_relic_research", 4, 1000, 1000, 0, 0, nil, 0)

			-- Compute infantry research
			if (iInfantrySquads >= 3) then
				self:DynamicResearch("tau_improved_power_source_research_2", 4, 150, 100, 0, 0, nil, 0)
			end
			
			if (iKrootSquads >= 1) then
				self:DynamicResearch("tau_beast_blood_research_2", 4, 100, 40, 0, 0, nil, 0)
				self:DynamicResearch("tau_improved_metallurgy_kroot", 4, 150, 150, 0, 0, nil, 0)
				self:DynamicResearch("tau_kroot_pact_research", 4, 350, 200, 0, 0, nil, 0)
				self:DynamicResearch("tau_kroot_pact_research_2", 4, 450, 310, 0, 0, nil, 0)
			end	

			-- Compute Tier IV
			self:DynamicResearch("tau_path_to_destruction_research", 4, 1200, 1800, 0, 0, nil, 0)
		end

		-- Compute tier 5 researches
		if (self.tierLevel >= 5) then

			-- Compute resource researches
			self:DynamicResearch("tau_power_research_4", 5, 650, 80, 0, 0, nil, 0)
			self:DynamicResearch("tau_requisition_research_4", 5, 150, 550, 0, 0, nil, 0)
			
			-- Computer Relic researches
			self:DynamicResearch("tau_relic_research_2", 5, 2000, 2000, 0, 0, nil, 0)

			-- Compute R'vanra researches
			self:DynamicResearch("tau_rvarna_parts_research", 5, 100, 100, 0, 0, nil, 0)
			self:DynamicResearch("tau_rvarna_parts_research_2", 5, 200, 200, 0, 0, nil, 0)

			-- Compute Titan researches
			if (iTitanSquads >= 1) then
				self:DynamicResearch("tau_rvarna_submunition_research", 5, 3500, 3500, 0, 0, nil, 0)
			end

			-- Compute Manta researches
			if (self:CountSquads("tau_manta_squad") >= 1) then
				self:DynamicResearch("tau_manta_weapons_research", 5, 300, 300, 0, 0, nil, 0)
				self:DynamicResearch("tau_manta_armor_research", 5, 300, 300, 0, 0, nil, 0)
				self:DynamicResearch("tau_manta_missile_barrage_research", 5, 780, 780, 0, 0, nil, 0)
			end

			-- Compute Tier V
			if self:HasCriticalLocation() then
				self:DynamicResearch("tau_apocalypse_research", 5, 3000, 5000, 0, 0, nil, 0)
			end
		end

		-- Compute tier 6 researches
		if (self.tierLevel >= 6) then

			-- Compute resource researches
			self:DynamicResearch("tau_power_research_5", 6, 800, 100, 0, 0, nil, 0)
			self:DynamicResearch("tau_requisition_research_5", 6, 300, 1100, 0, 0, nil, 0)

			-- Compute Arka Cannon research
			self:DynamicResearch("tau_arka_cannon_research", 6, 20000, 20000, 0, 0, nil, 0)
		end	
	end

	-- Restrict dynamic builds to hard difficulty or higher
	if (CpuManager.AISettings.bMultiBuildings) then
	
		-- Dynamic buildings
		-- Item-Syntax: BuildingName, BuildingCount, MinTier, MinRequisition, MinPower, MinSquadCap, MinSupportCap
		self:DynamicBuild("tau_hq", 2, 1, 800, 200, 0, 0)
		self:DynamicBuild("tau_plasma_generator", 6 * self:GetBuildingCountByName("tau_hq"), 3, 600, 0, 0, 0)

		-- Dynamically regulate quantity of defensive buildings based on how many strats/crits/relics we have through the tiers so we avoid cluttering/bottlenecking on maps with limited points
		if (self.tierLevel >= 2 and (iRequisition >= 1500 and iPower >= 1500)) then
    			if (resource_manager:GetNumOwnedStrategicPoints() < 4) or (resource_manager:GetNumOwnedStrategicPoints() < 3 and self:HasCriticalLocation()) or (resource_manager:GetNumOwnedStrategicPoints() < 3 and self:HasRelic()) then
				self:DynamicBuild("tau_turret", 2, 2, 500, 400, 0, 0)
				self:DynamicBuild("tau_mines", 2, 2, 400, 100, 0, 0)
				self:DynamicBuild("tau_turret_sp", 1, 3, 600, 400, 0, 0)
				self:DynamicBuild("tau_shield_generator", 1, 3, 300, 900, 0, 0)
				self:DynamicBuild("tau_wall", 2, 3, 600, 0, 0, 0)
				self:DynamicBuild("tau_turret", 4, 3, 500, 400, 0, 0)
				self:DynamicBuild("tau_mines", 4, 3, 400, 100, 0, 0)
				self:DynamicBuild("tau_shield_generator", 2, 3, 700, 1000, 0, 0)
				self:DynamicBuild("tau_turret_sp", 2, 3, 900, 800, 0, 0)
   			end
		else
   			if (resource_manager:GetNumOwnedStrategicPoints() > 3) or (resource_manager:GetNumOwnedStrategicPoints() > 2 and self:HasCriticalLocation()) or (resource_manager:GetNumOwnedStrategicPoints() > 2 and self:HasRelic()) then
				self:DynamicBuild("tau_turret", 3, 2, 500, 400, 0, 0)
				self:DynamicBuild("tau_mines", 3, 2, 400, 100, 0, 0)
				self:DynamicBuild("tau_turret_sp", 2, 3, 600, 400, 0, 0)
				self:DynamicBuild("tau_shield_generator", 1, 3, 300, 900, 0, 0)
				self:DynamicBuild("tau_wall", 3, 3, 600, 0, 0, 0)
				self:DynamicBuild("tau_turret", 6, 3, 500, 400, 0, 0)
				self:DynamicBuild("tau_mines", 6, 3, 400, 100, 0, 0)
				self:DynamicBuild("tau_shield_generator", 2, 3, 700, 1000, 0, 0)
				self:DynamicBuild("tau_turret_sp", 6, 3, 900, 800, 0, 0)
			end
		end

		if (self.tierLevel >= 4 and (iRequisition >= 2500 and iPower >= 2500)) then
    			if (resource_manager:GetNumOwnedStrategicPoints() > 4) or (resource_manager:GetNumOwnedStrategicPoints() > 3 and self:HasCriticalLocation()) or (resource_manager:GetNumOwnedStrategicPoints() > 3 and self:HasRelic()) then
				self:DynamicBuild("tau_shield_generator", 3, 4, 300, 900, 0, 0)
				self:DynamicBuild("tau_turret", 8, 4, 500, 400, 0, 0)
				self:DynamicBuild("tau_mines", 8, 4, 400, 100, 0, 0)
				self:DynamicBuild("tau_turret_sp", 4, 4, 600, 400, 0, 0)
				self:DynamicBuild("tau_wall", 8, 4, 600, 0, 0, 0)
				self:DynamicBuild("tau_shield_generator", 4, 5, 300, 900, 0, 0)
				self:DynamicBuild("tau_turret", 10, 5, 500, 400, 0, 0)
				self:DynamicBuild("tau_mines", 10, 5, 400, 100, 0, 0)
				self:DynamicBuild("tau_wall", 10, 5, 600, 0, 0, 0)
				self:DynamicBuild("tau_shield_generator", 5, 5, 700, 1000, 0, 0)
				self:DynamicBuild("tau_turret_sp", 5, 5, 900, 800, 0, 0)
				self:DynamicBuild("tau_shield_generator", 6, 6, 1000, 1500, 0, 0)
				self:DynamicBuild("tau_turret_sp", 6, 6, 1500, 1000, 0, 0)
				self:DynamicBuild("tau_turret", 12, 6, 500, 400, 0, 0)
				self:DynamicBuild("tau_mines", 12, 6, 400, 100, 0, 0)
				self:DynamicBuild("tau_wall", 12, 6, 600, 0, 0, 0)
			end
		end

		-- Build additional support buildings as tiers progress
		if (self.tierLevel >= 2) then
			if (iRequisition >= 2000 and iPower >= 2000) then
				self:DynamicBuild("tau_barracks", 2, 2, 800, 0, 0, 0)
				self:DynamicBuild("tau_kroot_nest", 2, 2, 900, 0, 0, 0)
				self:DynamicBuild("tau_vehicle_building", 2, 3, 1000, 300, 0, 0)
				self:DynamicBuild("tau_hq", 3, 3, 1500, 900, 0, 0)
				self:DynamicBuild("tau_hq", 4, 5, 2000, 1000, 0, 0)
				self:DynamicBuild("tau_guidance_beacon", 2, 5, 3000, 3000, 0, 0)
				self:DynamicBuild("tau_titan_building", 2, 5, 4000, 3500, 0, 0)
				self:DynamicBuild("tau_arka_ion_cannon", 2, 5, 5000, 5000, 0, 0)
			end
		end

		-- Build additional uber buildings in later tiers
		if (self.tierLevel >= 6) then
			if (iRequisition >= 3000 and iPower >= 3000) then
				self:DynamicBuild("tau_barracks", 3, 6, 800, 0, 0, 0)
				self:DynamicBuild("tau_kroot_nest", 3, 6, 900, 0, 0, 0)
				self:DynamicBuild("tau_vehicle_building", 3, 6, 1000, 300, 0, 0)
				self:DynamicBuild("tau_guidance_beacon", 3, 6, 4000, 4000, 0, 0)
				self:DynamicBuild("tau_titan_building", 3, 6, 5000, 5500, 0, 0)
				self:DynamicBuild("tau_arka_ion_cannon", 3, 6, 7000, 6000, 0, 0)
			end
		end

		-- Build additional Superweapons if we have excess resources
		if (iRequisition >= 12000 and iPower >= 12000) then
			self:DynamicBuild("tau_arka_ion_cannon", 4, 6, 10000, 10000, 0, 0)
			self:DynamicBuild("tau_arka_ion_cannon", 5, 6, 12000, 12000, 0, 0)
			self:DynamicBuild("tau_arka_ion_cannon", 6, 6, 15000, 15000, 0, 0)
		end
	end
end

-- Method to check if force tech should be computed
function TauBuildBaseStrategy:ForceTech()

	-- Check time
	if (g_iGMT < 60 * CpuManager.ForceTech.StartTier1) then
		return false
	end
	
	-- Check resources
	local iRequisition = resource_manager:GetResourceAmount():Get( ResourceAmount.RT_Requisition )
	local iPower = resource_manager:GetResourceAmount():Get( ResourceAmount.RT_Power )

	-- Check tier
	local iTierLevel = self:GetTierLevel()
	if (iTierLevel == 1) then
	
		-- Check resources
		if (iRequisition > 600 and iPower > 200) then
			return false
		end
	
		-- Check build channel for building
		if (self:GetBuildingCountByName("tau_research_building", false) >= 1) then
			return false
		end
		return true
		
	elseif (iTierLevel == 2) then

		-- Check for vehicle building
		if (self:GetBuildingCountByName("tau_vehicle_building", false) < 1) then
			return true
		end
		
		-- Check time
		if (g_iGMT > 60 * CpuManager.ForceTech.StartTier2 and (iRequisition < 700 or iPower < 700)) then
			return true
		end
		
	elseif (iTierLevel == 3) then	

		-- Check time
		if (g_iGMT > 60 * CpuManager.ForceTech.StartTier3 and (iRequisition < 1000 or iPower < 1200)) then
			return true
		end
	end
	return false
end

-- Arkhan 03.2006: Return placement type for buildings
function TauBuildBaseStrategy:GetPlacementType(iBuildingID)
	
	-- Check building
	if (iBuildingID == cpu_manager.stats:GetBuildingID("tau_hq")) then
        	local count = self:GetBuildingCountByName("tau_hq", false)
		local friend = cpu_manager:FindClosestFriendPlayer()
		if friend == nil then
			-- Lone Player
                	if count == 0 and not cpu_manager:HQThreat() then
                    		return "HQ"
                	else
                    		return "Safeplace"
                	end
        	else
        		-- Has allies
                	if count > 2 or cpu_manager:HQThreat() then
 				return "HQ"
                	else
				return "Safeplace"
                	end
		end
	elseif (iBuildingID == cpu_manager.stats:GetBuildingID("tau_barracks") or
		iBuildingID == cpu_manager.stats:GetBuildingID("tau_kroot_nest") or
		iBuildingID == cpu_manager.stats:GetBuildingID("tau_vehicle_building") or
		iBuildingID == cpu_manager.stats:GetBuildingID("tau_guidance_beacon") or
		iBuildingID == cpu_manager.stats:GetBuildingID("tau_titan_building")) then
		return "Military"
	elseif (iBuildingID == cpu_manager.stats:GetBuildingID("tau_turret") or
		iBuildingID == cpu_manager.stats:GetBuildingID("tau_turret_sp") or
		iBuildingID == cpu_manager.stats:GetBuildingID("tau_wall") or
		iBuildingID == cpu_manager.stats:GetBuildingID("tau_shield_generator")) then
		return "Front2"
	elseif (iBuildingID == cpu_manager.stats:GetBuildingID("tau_mines")) then
		return "Mine"
	elseif (cpu_manager:IsGenerator(iBuildingID) or
		iBuildingID == cpu_manager.stats:GetBuildingID("tau_research_building") or
		iBuildingID == cpu_manager.stats:GetBuildingID("tau_shrine_of_montka") or
		iBuildingID == cpu_manager.stats:GetBuildingID("tau_shrine_of_kauyon") or
		iBuildingID == cpu_manager.stats:GetBuildingID("tau_shrine_of_purpose") or
		iBuildingID == cpu_manager.stats:GetBuildingID("tau_arka_ion_cannon")) then
		return "BaseBack"
	end
	return "Basic"
end

function TauBuildBaseStrategy:HQEmergency()

	-- Check HQ count
	local iHQCount = self:GetBuildingCountByName("tau_hq")
	if (iHQCount >= 2) then
		return false
	end

	-- Build a second HQ if first one is severly damaged
	local bHQDamaged = false
	for oBuilding in military_manager:GetBases() do
	
		-- Check for valid building
		if (oBuilding:IsValid() and not oBuilding:IsListeningPost() and oBuilding:GetBaseName() == "tau_hq") then
	  
			-- Check health
			if (oBuilding:GetHealthPercentage() < 0.6) then

				-- Adjust current build program
				for iLoop1 = 1, table.getn(self.info.BuildPrograms[self.m_iCurrentBuildProgram]) do
				
					-- Search HQ entry and set build count to two
					if (self.info.BuildPrograms[self.m_iCurrentBuildProgram][iLoop1][7] == "tau_hq") then
						self.info.BuildPrograms[self.m_iCurrentBuildProgram][iLoop1][5] = 2
						return true
					end
				end
			end
		end
	end
	return false
end

-- Arkhan 11.2006: Virtual method for checking out relic units
function TauBuildBaseStrategy:RelicRequired(sName)

	-- Check name
	if  (sName == "tau_greater_knarloc_squad") or
		(sName == "tau_swordfish_squad") or
		(sName == "tau_malo_squad") or
		(sName == "tau_manta_squad") or
		(sName == "tau_xv101_riptide_suit_squad") or
		(sName == "tau_xv104_riptide_suit_squad") or
		(sName == "tau_xv107_rvarna_suit_squad") or
		(sName == "tau_xv202_mako_titan_squad") then
		return true
	end
	return false
end