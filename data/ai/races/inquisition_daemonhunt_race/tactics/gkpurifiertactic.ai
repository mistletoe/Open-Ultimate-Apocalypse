----------------------------------------
-- File: 'GKPurifiertactic.ai'
-- Created by Cylarne
-- Edited by Thudmeizer	@ 07.06.2016

class 'GKPurifierTactic' (DaemonhuntInfantryTactic)

GKPurifier = {}

function GKPurifierTactic:__init( squad_ai ) super( squad_ai )

	self:SetName("GK Purifier Tactic")
end

-- Grey Knight Purifiers are allowed to retreat even directly after a jump
function GKPurifierTactic:SetTarget( target, variant_type )

	self.variant_type = variant_type
	self.target = Vector3f(target)
	self.m_iMoveDelay = 0
	self.last_jump = 0
end

function GKPurifierTactic:InitAbilities()

	if (GKPurifier.medkits_id == nil) then
		GKPurifier.medkits_id = cpu_manager.stats:GetAbilityID( "inquisition_medikits" )	
	end
	
	if (GKPurifier.nemesis_id == nil) then
		GKPurifier.nemesis_id = cpu_manager.stats:GetAbilityID( "inquisition_psyker_nemesis" )	
	end

	if (GKPurifier.purify_id == nil) then
		GKPurifier.purify_id = cpu_manager.stats:GetAbilityID( "inquisition_psyker_purify" )	
	end
	
	if (GKPurifier.quake_id == nil) then
		GKPurifier.quake_id = cpu_manager.stats:GetAbilityID( "inquisition_psyker_quake" )	
	end

	if (GKPurifier.shroud_id == nil) then
		GKPurifier.shroud_id = cpu_manager.stats:GetAbilityID( "inquisition_psyker_shroud" )	
	end

	if (GKPurifier.rally_id == nil) then
		GKPurifier.rally_id = cpu_manager.stats:GetAbilityID( "inquisition_rally_gk" )	
	end

	if (GKPurifier.run_id == nil) then
		GKPurifier.run_id = cpu_manager.stats:GetAbilityID( "all_run!" )	
	end
end

function GKPurifierTactic:DoAbilities()

	-- If we are dying, lower requisites for attacks
	if (self.squad_ai:WasRecentlyHurt() and self.squad_ai:GetHealthPercentage() < 0.4) then
		
		if (self.squad_ai:CanDoAbility( GKPurifier.nemesis_id )) then
			Ability.DoAbilityPos( self.squad_ai, GKPurifier.nemesis_id, Ability.Filters.CloseInfantryEnemy, 4 ) 
			Ability.DoAbilityPos( self.squad_ai, GKPurifier.nemesis_id, Ability.Filters.CloseMonsterEnemy, 2 )
		end

		if (self.squad_ai:CanDoAbility( GKPurifier.purify_id )) then
			Ability.DoAbilityPos( self.squad_ai, GKPurifier.purify_id, Ability.Filters.CloseMonsterEnemy, 2 )
			Ability.DoAbilityPos( self.squad_ai, GKPurifier.purify_id, Ability.Filters.CloseInfantryEnemy, 4 )
			Ability.DoAbilityPos( self.squad_ai, GKPurifier.purify_id, Ability.Filters.CloseCommanderEnemy, 1 )
		end

		if (self.squad_ai:CanDoAbility( GKPurifier.quake_id )) then
			Ability.DoAbilityArea( self.squad_ai, GKPurifier.quake_id, Ability.Filters.CloseSquadEnemy, 30, 3 ) 
			Ability.DoAbilityArea( self.squad_ai, GKPurifier.quake_id, Ability.Filters.CloseMonsterEnemy, 30, 2 ) 
		end

		if (self.squad_ai:CanDoAbility( GKPurifier.shroud_id )) then
			Ability.DoAbilityArea( self.squad_ai, GKPurifier.shroud_id, Ability.Filters.CloseEnemy, 20, 3 )
		end
	else
		if (self.squad_ai:CanDoAbility( GKPurifier.nemesis_id )) then
			Ability.DoAbilityPos( self.squad_ai, GKPurifier.nemesis_id, Ability.Filters.CloseInfantryEnemy, 8 ) 
			Ability.DoAbilityPos( self.squad_ai, GKPurifier.nemesis_id, Ability.Filters.CloseMonsterEnemy, 4 )
		end

		if (self.squad_ai:CanDoAbility( GKPurifier.purify_id )) then
			Ability.DoAbilityPos( self.squad_ai, GKPurifier.purify_id, Ability.Filters.CloseMonsterEnemy, 4 )
			Ability.DoAbilityPos( self.squad_ai, GKPurifier.purify_id, Ability.Filters.CloseInfantryEnemy, 8 )
			Ability.DoAbilityPos( self.squad_ai, GKPurifier.purify_id, Ability.Filters.CloseCommanderEnemy, 1 )
		end

		if (self.squad_ai:CanDoAbility( GKPurifier.quake_id )) then
			Ability.DoAbilityArea( self.squad_ai, GKPurifier.quake_id, Ability.Filters.CloseSquadEnemy, 30, 6 ) 
			Ability.DoAbilityArea( self.squad_ai, GKPurifier.quake_id, Ability.Filters.CloseMonsterEnemy, 30, 4 ) 
		end

		if (self.squad_ai:CanDoAbility( GKPurifier.shroud_id )) then
			Ability.DoAbilityArea( self.squad_ai, GKPurifier.shroud_id, Ability.Filters.CloseEnemy, 20, 6 )
		end
	end

	-- Use Medkits if low on health
	if (self.squad_ai:WasRecentlyHurt() and self.squad_ai:GetHealthPercentage() < 0.4) then
		
		if (self.squad_ai:CanDoAbility( GKPurifier.medkits_id )) then
			self.squad_ai:DoSpecialAbility( GKPurifier.medkits_id )
		end
	end

	-- Run if safe
	if ((not self.squad_ai:IsInCombat() and self.squad_ai:IsInStateMove()) or self.stateID ~= Tactic.StateID.NoState) then

		-- If I am safe I can run
		if (self.squad_ai:CanDoAbility( GKPurifier.run_id )) then
			self.squad_ai:DoSpecialAbility( GKPurifier.run_id )
		end
	end

	-- Do basic abilities
	DaemonhuntInfantryTactic.DoAbilities(self)
end

function GKPurifierTactic:CheckForBroken()

	if (self.squad_ai:IsBroken()) then
	
		-- Check if I can repair my morale
		if (self.squad_ai:CanDoAbility( GKPurifier.rally_id )) then
			self.squad_ai:DoSpecialAbility( GKPurifier.rally_id )
		end
	end
   
	-- Call basic broken check method
	InfantryTactic.CheckForBroken(self)
end

function GKPurifierTactic:Update()

	-- State machine
	if (not InfantryTactic.Update(self)) then
		return
	end
	
	-- Check if we are in serious trouble
	self:EmergencyRetreat()
end
