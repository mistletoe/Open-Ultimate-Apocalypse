----------------------------------------
-- File: 'darkeldarwracktactic.ai'
-- Edited by Cylarne @ 2012
-- Edited by Thudmeizer	@ 05.04.2016

class 'DarkEldarWrackTactic' (DarkEldarInfantryTactic)

DarkEldarWrack = {}

function DarkEldarWrackTactic:__init( squad_ai ) super( squad_ai )

	self:SetName("Dark Eldar Wrack Tactic")
end

function DarkEldarWrackTactic:InitAbilities()
	
	if (DarkEldarWrack.combatdrugs_id == nil) then
		DarkEldarWrack.combatdrugs_id = cpu_manager.stats:GetAbilityID( "dark_eldar_combat_drugs_wrack" )	
	end

	if (DarkEldarWrack.drugs_id == nil) then
		DarkEldarWrack.drugs_id = cpu_manager.stats:GetAbilityID( "dark_eldar_combat_drugs" )	
	end

	if (DarkEldarWrack.leach_id == nil) then
		DarkEldarWrack.leach_id = cpu_manager.stats:GetAbilityID( "dark_eldar_soul_leach" )
	end

	if (DarkEldarWrack.stinger_id == nil) then
		DarkEldarWrack.stinger_id = cpu_manager.stats:GetAbilityID( "dark_eldar_stinger" )
	end

	if (DarkEldarWrack.torture_id == nil) then
		DarkEldarWrack.torture_id = cpu_manager.stats:GetAbilityID( "dark_eldar_torture_amp" )
	end

	if (DarkEldarWrack.run_id == nil) then
		DarkEldarWrack.run_id = cpu_manager.stats:GetAbilityID( "all_run!" )	
	end
end

function DarkEldarWrackTactic:DoAbilities()
--[[
	if (self.squad_ai:IsInCombat()) then

		-- Use drugs!
		if (self.squad_ai:CanDoAbility( DarkEldarWrack.combatdrugs_id )) then
			self.squad_ai:DoSpecialAbility( DarkEldarWrack.combatdrugs_id )
		elseif (self.squad_ai:CanDoAbility( DarkEldarWrack.drugs_id )) then
			self.squad_ai:DoSpecialAbility( DarkEldarWrack.drugs_id )
		end
	end
]]
	-- Luster of Souls: Restore the strength of your squad by concealing them and regaining their health. Exchange this great ritual in exchange for souls.
	if (self.squad_ai:WasRecentlyHurt() and self.squad_ai:GetHealthPercentage() < 0.4) then

		if (self.squad_ai:CanDoAbility(DarkEldarWrack.leach_id)) then
			Ability.DoAbilityArea(self.squad_ai, DarkEldarWrack.leach_id, Ability.Filters.CloseSquadEnemy, 15, 4)
			Ability.DoAbilityArea(self.squad_ai, DarkEldarWrack.leach_id, Ability.Filters.CloseCommanderEnemy, 15, 1)
		end
	end

	-- We are dying, lower requisites for attacks
	if (self.squad_ai:WasRecentlyHurt() and self.squad_ai:GetHealthPercentage() < 0.4) then
		Ability.DoAbilityTarget( self.squad_ai, DarkEldarWrack.stinger_id, Ability.Filters.CloseInfantryEnemy, 2 )
		Ability.DoAbilityPos( self.squad_ai, DarkEldarWrack.torture_id, Ability.Filters.CloseEnemy, 3 )
	else
		Ability.DoAbilityTarget( self.squad_ai, DarkEldarWrack.stinger_id, Ability.Filters.CloseInfantryEnemy, 6 )
		Ability.DoAbilityPos( self.squad_ai, DarkEldarWrack.torture_id, Ability.Filters.CloseEnemy, 6 )
	end

	-- Run if safe
	if ((not self.squad_ai:IsInCombat() and self.squad_ai:IsInStateMove()) or self.stateID ~= Tactic.StateID.NoState) then

		-- If I am safe I can run
		if (self.squad_ai:CanDoAbility( DarkEldarWrack.run_id )) then
			self.squad_ai:DoSpecialAbility( DarkEldarWrack.run_id )
		end
	end

	-- Call basic DoAbilities methods
	DarkEldarInfantryTactic.DoAbilities(self)
end

function DarkEldarWrackTactic:Update()

	if (self:IsComplete()) then
		return
	end
	
	-- State machine
	if (not InfantryTactic.Update( self )) then
		return
	end
end