----------------------------------------
-- File: 'daemonprincetactic.ai'
-- Edited by Thudmeizer @ 02.04.2016
-- Edited by Cylarne_04 2011

class 'DaemonPrinceTactic' (ChaosMarineInfantryTactic)

DaemonPrince = {}

function DaemonPrinceTactic:__init( squad_ai ) super( squad_ai )

	self:SetName("Daemon Prince Tactic")
end

function DaemonPrinceTactic:AutoBuildAddOn( addonSlot )
	for e in self.squad_ai:GetEntities() do
		local buildChannelDaemonPrince = build_manager:GetBuildChannelFromID(e:GetID())
		if (buildChannelDaemonPrince ~= nil) then
			local addOnID = buildChannelDaemonPrince:GetItemIDAt(BuildChannelAI.PQ_AddOn, addonSlot)
			if (buildChannelDaemonPrince:IsBuilding() == 0 and buildChannelDaemonPrince:CanAddToQueue(BuildChannelAI.PQ_AddOn, addOnID) == BuildChannelAI.CANBUILD_Ok) then
				buildChannelDaemonPrince:BuildAddOn(addOnID)
				return
			end
		end
	end
	return
end

function DaemonPrinceTactic:InitAbilities()

	-- Init ability ID's
	if (DaemonPrince.roar_id == nil) then
		DaemonPrince.roar_id = cpu_manager.stats:GetAbilityID( "chaos_fear_roar" )	
	end

	if (DaemonPrince.confusion_id == nil) then
		DaemonPrince.confusion_id = cpu_manager.stats:GetAbilityID( "chaos_ritual_confusion_prince" )	
	end

	if (DaemonPrince.eye_id == nil) then
		DaemonPrince.eye_id = cpu_manager.stats:GetAbilityID( "chaos_ritual_eye_prince" )	
	end

	if (DaemonPrince.sacrifice_id == nil) then
		DaemonPrince.sacrifice_id = cpu_manager.stats:GetAbilityID( "chaos_ritual_sacrifice_prince" )	
	end

	if (DaemonPrince.run_id == nil) then
		DaemonPrince.run_id = cpu_manager.stats:GetAbilityID( "all_run!" )	
	end
end

function DaemonPrinceTactic:DoAbilities()

	Ability.DoAbilityArea( self.squad_ai, DaemonPrince.roar_id, Ability.Filters.CloseInfantryEnemy, 20, 4 )

	-- Confusion: The ritual of confusion will temporarily cause everything who oppose the powers of Chaos to attack each other and lose control, so long as the ritual is used.
	-- DOES NOT affect titans, heavily armored vehicles, structures, aircraft, or daemons.
	if (self.squad_ai:IsAttacking() and self.squad_ai:CanDoAbility(DaemonPrince.confusion_id)) then
		Ability.DoAbilityArea( self.squad_ai, DaemonPrince.confusion_id, Ability.Filters.CloseSquadEnemy, 20, 4 )
		Ability.DoAbilityArea( self.squad_ai, DaemonPrince.confusion_id, Ability.Filters.CloseCommanderEnemy, 20, 1 )
	end

	-- All-Seeing Eye: Allows the Daemon Prince to see everything throughout the globe so long as the ability is active.
	-- The Daemon Prince is unable to attack, move, or use other abilities for almost a minute will globally affect the world and turn the tide of battle with this ultimate power.

	-- Cast only if safe.
	if (not self.squad_ai:IsInCombat() and not cpu_manager.terrain_analyzer:HasThreat(self.squad_ai:GetPosition(), 80)) then

		-- Check if we are healthy and can do ability.
		if (self.squad_ai:GetHealthPercentage() > 0.8 and self.squad_ai:CanDoAbility(DaemonPrince.eye_id)) then
	
			local iRange = self.squad_ai:GetAbilityRange(DaemonPrince.eye_id)
			local oSquad = Ability.Filters.CloseEnemy(self.squad_ai:GetPosition(), 80, 20)
			if (oSquad ~= nil) then
			
				-- Only try to detect if the infiltrated unit is attacking or capturing
				if (oSquad:IsAttacking()) then
					self.squad_ai:DoSpecialAbility(DaemonPrince.eye_id)
				end
			end
		end
	end

	-- Ritual Sacrifice: A global offensive/defensive ability that drains the health of enemies at a minor rate over time for 45 seconds.
	-- The Daemon Prince becomes immobile and will do nothing throughout the duration of this spell.

	-- Cast only if safe.
	if (not self.squad_ai:IsInCombat() and not cpu_manager.terrain_analyzer:HasThreat(self.squad_ai:GetPosition(), 60)) then

		-- Check if we are healthy and can do ability.
		if (self.squad_ai:GetHealthPercentage() > 0.7 and self.squad_ai:CanDoAbility(DaemonPrince.sacrifice_id)) then
			Ability.DoAbilityArea( self.squad_ai, DaemonPrince.sacrifice_id, Ability.Filters.CloseSquadEnemy, 60, 30 )
			Ability.DoAbilityArea( self.squad_ai, DaemonPrince.sacrifice_id, Ability.Filters.CloseMonsterEnemy, 60, 30 )
		end
	end

	-- Run if safe
	if ((not self.squad_ai:IsInCombat() and self.squad_ai:IsInStateMove()) or self.stateID ~= Tactic.StateID.NoState) then

		-- If I am safe I can run
		if (self.squad_ai:CanDoAbility( DaemonPrince.run_id )) then
			self.squad_ai:DoSpecialAbility( DaemonPrince.run_id )
		end
	end
end

function DaemonPrinceTactic:Upgrade()

--	self:AutoBuildAddOn(0)	--	[addon_01] chaos_ritual_confusion_addon
--	self:AutoBuildAddOn(1)	--	[addon_02] chaos_ritual_eye_addon
--	self:AutoBuildAddOn(2)	--	[addon_03] chaos_ritual_sacrifice_addon

--	self:AutoBuildAddOn(3)	--	[addon_04] addon_commanders_cap_squad			4/1
--	self:AutoBuildAddOn(4)	-- 	[addon_05] addon_commanders_cap_support			5/1
--	self:AutoBuildAddOn(5)	-- 	[addon_06] addon_commanders_cap_relic			6/1
--	self:AutoBuildAddOn(6)	-- 	[addon_07] addon_commanders_increase_production		5/1
--	self:AutoBuildAddOn(7)	-- 	[addon_08] addon_commanders_increase_health		6/1
--	self:AutoBuildAddOn(8)	-- 	[addon_09] addon_commanders_increase_morale		6/1
--	self:AutoBuildAddOn(9)	-- 	[addon_10] addon_commanders_cap_squad_2			6
--	self:AutoBuildAddOn(10)	-- 	[addon_11] addon_commanders_cap_support_2		8
--	self:AutoBuildAddOn(11)	-- 	[addon_12] addon_commanders_increase_production_2	8

	if (cpu_manager.cpu_player:IsResearchComplete("commander_level8_research") and cpu_manager.cpu_player:IsResearchComplete("chaos_apocalypse_research")) then
		-- Choose a random ritual addon
		local addon_random_sorcerer_ritual = math.random( 0,2 )	-- Randomize these ritual addons
		self:AutoBuildAddOn(addon_random_sorcerer_ritual)
	end

   	if (cpu_manager:GetTierLevel() <= 4) then 
		local addon_random_commander_upgrades = math.random( 3,11 )	-- Randomize these addons
		self:AutoBuildAddOn(addon_random_commander_upgrades)
	end

   	if (cpu_manager:GetTierLevel() > 4) then 
		self:AutoBuildAddOn(5)	-- Always build in late tiers to support the construction of Titans and late game ubers.
	end
end