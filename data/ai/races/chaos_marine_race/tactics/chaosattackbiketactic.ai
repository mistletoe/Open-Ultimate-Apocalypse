----------------------------------------
-- File: 'chaosattackbiketactic.ai'
-- Created by Cylarne
-- Edited by Thudmeizer		@ 23.09.2016

class 'ChaosAttackbikeTactic' (ChaosMarineVehicleTactic)

ChaosAttackbike = {}

function ChaosAttackbikeTactic:__init( squad_ai ) super( squad_ai )

	self:SetName("Chaos Attackbike Tactic")
end

function ChaosAttackbikeTactic:InitAbilities()

	-- Init ability ID's
	if (ChaosAttackbike.flashbang_id == nil) then
		ChaosAttackbike.flashbang_id = cpu_manager.stats:GetAbilityID( "chaos_flashbang_grenades" )	
	end

	if (ChaosAttackbike.frag_id == nil) then
		ChaosAttackbike.frag_id = cpu_manager.stats:GetAbilityID( "chaos_frag_grenades" )	
	end

	if (ChaosAttackbike.inferno_id == nil) then
		ChaosAttackbike.inferno_id = cpu_manager.stats:GetAbilityID( "chaos_inferno_grenades" )	
	end

	if (ChaosAttackbike.krak_id == nil) then
		ChaosAttackbike.krak_id = cpu_manager.stats:GetAbilityID( "chaos_krak_grenades" )	
	end

	if (ChaosAttackbike.melta_id == nil) then
		ChaosAttackbike.melta_id = cpu_manager.stats:GetAbilityID( "chaos_melta_bombs_havoc" )	
	end

	if (ChaosAttackbike.burnout_id == nil) then
		ChaosAttackbike.burnout_id = cpu_manager.stats:GetAbilityID( "marines_burnout" )
	end
	
	if (ChaosAttackbike.smoke_id == nil) then
		ChaosAttackbike.smoke_id = cpu_manager.stats:GetAbilityID( "chaos_smoke_grenades" )	
	end	
end

function ChaosAttackbikeTactic:DoAbilities()

	-- Activate various targeted abilities
	Ability.DoAbilityTarget( self.squad_ai, ChaosAttackbike.flashbang_id, Ability.Filters.CloseSquadEnemy, 4)
	Ability.DoAbilityTarget( self.squad_ai, ChaosAttackbike.frag_id, Ability.Filters.CloseEnemy, 4)
	Ability.DoAbilityTarget( self.squad_ai, ChaosAttackbike.inferno_id, Ability.Filters.CloseInfantryEnemy, 3)
	Ability.DoAbilityTarget( self.squad_ai, ChaosAttackbike.krak_id, Ability.Filters.CloseVehicleEnemy, 1)
	Ability.DoAbilityTarget( self.squad_ai, ChaosAttackbike.melta_id, Ability.Filters.CloseVehicleEnemy, 1)
	Ability.DoAbilityTarget( self.squad_ai, ChaosAttackbike.smoke_id, Ability.Filters.CloseEnemy, 4)
	
	-- Check if we can use burn out if enemy infantry are nearby
	Ability.DoAbilityArea( self.squad_ai, ChaosAttackbike.burnout_id, Ability.Filters.CloseInfantryEnemy, 10, 4 )
end

function ChaosAttackbikeTactic:Upgrade()
	-- If there are no resources available, don't upgrade!
	if (not Tactic.Options.can_reinforce) then
		return
	end
  
	--This does something funky; apparently, this is one of the few vehicles that can use Reinforce, so it does a search like this.
	--Probably needs to use a proper Reinforce system just like infantry.
	local class_type = cpu_manager:FindClosestEnemyPlayer():GetMajorityClassType()
	self.squad_ai:DoBestUpgrade( class_type )
end

function ChaosAttackbikeTactic:AlwaysAttack()
	return true
end

function ChaosAttackbikeTactic:CanOnlyDecap()
	return true
end