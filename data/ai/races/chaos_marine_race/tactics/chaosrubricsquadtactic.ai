----------------------------------------
-- File: 'chaosrubricsquadtactic.ai'
-- Edited by Thudmeizer	@ 04.05.2016

class 'ChaosRubricSquadTactic' (ChaosMarineInfantryTactic)

ChaosRubricSquad = {}

function ChaosRubricSquadTactic:__init( squad_ai ) super( squad_ai )

	self:SetName("Chaos Rubric Squad Tactic")
end

function ChaosRubricSquadTactic:InitAbilities()

	-- Init ability ID's
	if (ChaosRubricSquad.boltchange_id == nil) then
		ChaosRubricSquad.boltchange_id = cpu_manager.stats:GetAbilityID( "chaos_bolt_of_change_aspiringsorcerer" )	
	end

	if (ChaosRubricSquad.warptime_id == nil) then
		ChaosRubricSquad.warptime_id = cpu_manager.stats:GetAbilityID( "chaos_warp_time_aspiringsorcerer" )	
	end
end

--Basic infantry tactics for Chaos squads. Includes all_run!
import ("Races/Chaos_Marine_Race/aaa_chaos_infantry_basetactic.ai")
--Basic infantry tactics, universal.
import ("Core/Tactics/infantryCoreAbilities.ai")
function ChaosRubricSquadTactic:DoAbilities()

	-- Activate bolt of change
        Ability.DoAbilityPos( self.squad_ai, ChaosRubricSquad.boltchange_id, Ability.Filters.CloseEnemy, 4)
	Ability.DoAbilityPos( self.squad_ai, ChaosRubricSquad.boltchange_id, Ability.EntityFilters.CloseBaseEntityEnemy, 2)

	-- Activate warp time
	Ability.DoAbilityArea( self.squad_ai, ChaosRubricSquad.warptime_id, Ability.Filters.CloseEnemy, 15, 6 ) 

	--No references to overridden classes here!
	ChaosInfantryBaseTactic(self)
	DoCoreAbilities(self)
end

function ChaosRubricSquadTactic:Upgrade()

	-- If I am broken, don't upgrade!
	if (self:IsAffectedByMorale() and self.squad_ai:IsBroken()) then
		return
	end
	
	-- If there are no ressources available, don't upgrade!
	if (not Tactic.Options.can_reinforce) then
		return
	end
  
	-- Only upgrade if not reinforcing
	if (not self.squad_ai:IsReinforcing()) then
	
		if (self.squad_ai:HasUpgradableTrooper()) then
			local class_type = cpu_manager:FindClosestEnemyPlayer():GetMajorityClassType()
			self.squad_ai:DoBestUpgrade( class_type )
		end
	end
end
