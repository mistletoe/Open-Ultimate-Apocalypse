----------------------------------------
-- File: 'superstructuretactic.ai'
-- Edited by Cylarne_04 @ 05.23.2010
-- Edited by Thudmeizer @ 26.06.2016

class 'SuperStructureTactic' (BaseTactic)

SuperStructure = {}

function SuperStructureTactic:__init( base_ai ) super( base_ai )

	self:SetName("Super Structure Tactic")
end

function SuperStructureTactic:InitAbilities()

	if (SuperStructure.nuke_id == nil) then
		SuperStructure.nuke_id = cpu_manager.stats:GetAbilityID( "marines_nuke" )					-- Nuke (All)
	end

	if (SuperStructure.emp_id == nil) then
		SuperStructure.emp_id = cpu_manager.stats:GetAbilityID( "marines_nuke2" )					-- EMP (Vehicles/Buildings) 
	end

	if (SuperStructure.cannon_id == nil) then
		SuperStructure.cannon_id = cpu_manager.stats:GetAbilityID( "marines_nuke3" )					-- Particle Cannon (All)
	end

	if (SuperStructure.curtain_id == nil) then
		SuperStructure.curtain_id = cpu_manager.stats:GetAbilityID( "marines_nuke4" )					-- Iron Curtain (All)
	end

	if (SuperStructure.repair_id == nil) then
		SuperStructure.repair_id = cpu_manager.stats:GetAbilityID( "all_autorepair" )
	end
end

function SuperStructureTactic:DoAbilities()

	local iRequisition = resource_manager:GetResourceAmount():Get( ResourceAmount.RT_Requisition )
	local iPower = resource_manager:GetResourceAmount():Get( ResourceAmount.RT_Power )

	-- Launch Nuclear Missile 
	if (self.base_ai:CanDoAbility( SuperStructure.nuke_id ) and (iRequisition >= 4000 and iPower >= 4000)) then
		Ability.DoAbilityPos( self.base_ai, SuperStructure.nuke_id, Ability.Filters.CloseEnemy, 24 )
		Ability.DoAbilityPos( self.base_ai, SuperStructure.nuke_id, Ability.EntityFilters.CloseBaseEntityEnemy, 6 )
	end
	
	-- Activate EMP
	if (self.base_ai:CanDoAbility( SuperStructure.emp_id ) and (iRequisition >= 4000 and iPower >= 2000)) then
		Ability.DoAbilityPos( self.base_ai, SuperStructure.emp_id, Ability.Filters.CloseVehicleEnemy, 8 )
		Ability.DoAbilityPos( self.base_ai, SuperStructure.emp_id, Ability.EntityFilters.CloseBaseEntityEnemy, 10 )
		Ability.DoAbilityPos( self.base_ai, SuperStructure.emp_id, Ability.Filters.CloseSquadEnemy, 12 )
	end

	-- Check if we can use the Particle Cannon
	if (self.base_ai:CanDoAbility(SuperStructure.cannon_id) and (iRequisition >= 3000 and iPower >= 3000)) then
	
		-- Get closest squad in range
		local iRange = self.base_ai:GetAbilityRange(SuperStructure.cannon_id)
		local oSquad = cpu_manager.cpu_player:FindFirstEnemy(self.base_ai:GetPosition(), iRange, 1)
		if (oSquad ~= nil) then
		
			-- Get stats
			local oStats = oSquad:GetStats()
			if (oStats ~= nil) then
			
				-- Check unit type
				local eClass = oStats:GetClass()
				if (eClass == UnitStatsAI.UC_VehicleHigh or eClass == UnitStatsAI.UC_Commander or
					eClass == UnitStatsAI.UC_MonsterHigh or oSquad:GetNumTroopers() >= 10) then
					
					-- Use Particle Cannon ability on squad
					self.base_ai:DoSpecialAbilitySquad(SuperStructure.cannon_id, oSquad:GetSquad())
				end
			end	
		end
	end

	-- Check if we can use the Iron Curtain
	if (self.base_ai:CanDoAbility(SuperStructure.curtain_id) and (iRequisition >= 8000 and iPower >= 8000)) then
	
		-- Search a squad
		local iRange = self.base_ai:GetAbilityRange(SuperStructure.curtain_id)
		local oUnit = Ability.Filters.CloseHurt(self.base_ai:GetPosition(), iRange, 10)
		if (oUnit ~= nil and oUnit:IsInCombat() and oUnit:WasRecentlyHurt() and cpu_manager:GetUnitStrength(oUnit) > 150) then
			self.base_ai:DoSpecialAbilitySquad(SuperStructure.curtain_id, oUnit:GetSquad())
		end
	end

	-- Base Repair!
	if (self.base_ai:WasRecentlyHurt() and self.base_ai:GetHealthPercentage() < 0.6) then

		if (self.base_ai:CanDoAbility( SuperStructure.repair_id )) then
			self.base_ai:DoSpecialAbility( SuperStructure.repair_id )
		end
	end
end
