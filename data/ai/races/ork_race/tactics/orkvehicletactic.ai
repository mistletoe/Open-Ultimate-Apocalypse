----------------------------------------
-- File: 'orkvehicletactic.ai'
-- Edited by Thudmeizer		@ 11.11.2016

class 'OrkVehicleTactic' (VehicleTactic)

function OrkVehicleTactic:__init( squad_ai ) super( squad_ai )

	self:SetName("Ork Vehicle Tactic")

	-- Set Stuck Unit Positions
	self.initialPosition = self.squad_ai:GetPosition()
	self.isStuck = false
end

-- Check if the vehicle should dance away in melee
function OrkVehicleTactic:CheckVehicleDance(sName)

	if (sName == "ork_squad_trukk" or
		sName == "ork_squad_wartrak" or
		sName == "ork_squad_looted_rhino" or
		sName == "ork_squad_killa_kan" or
		sName == "ork_squad_gun_wagon" or
		sName == "ork_squad_battle_wagon" or
		sName == "ork_squad_battle_wagon_armageddon" or
		sName == "ork_squad_deff_dread" or
		sName == "ork_squad_looted_tank" or
		sName == "ork_squad_kill_bursta" or
		sName == "ork_squad_kill_krusha" or
		sName == "ork_squad_battlefortress" or
		sName == "ork_squad_battlefortress_armageddon") then
		return true
	end
	return false
end

function OrkVehicleTactic:DoAbilities()

	-- Trakk and Trukk boost while moving
	if ((not self.squad_ai:IsInCombat() and self.squad_ai:IsInStateMove()) or self.stateID ~= Tactic.StateID.NoState) then
		boost_id = cpu_manager.stats:GetAbilityID( "ork_turbo_boost" )
		if (self.squad_ai:CanDoAbility(boost_id)) then
			self.squad_ai:DoSpecialAbility(boost_id)
		end
	end

	-- RAM!!! - The vehicle will sacrifice combat accuracy in exchange for extra speed and the ability to knock down infantry wherever the vehicle goes.
	-- Vehicle gains a 60% movement speed increase and will knock down infantry continuously on contact.
	local rammingspeed_id = cpu_manager.stats:GetAbilityID( "all_bumpertank" )
	if (self.squad_ai:IsInCombat() and self.squad_ai:IsInStateMove()) then
		if (self.squad_ai:CanDoAbility( rammingspeed_id )) then
			self.squad_ai:DoSpecialAbility( rammingspeed_id )
		end
	end	

	-- Jump squads' unstuck code call.
	-- Checks jump-able stuck squads, and force them to jump nearby
   	if self.squad_ai:CanJump() then
        	self:SolveStuckCase()
	end

	-- Call standard method
	VehicleTactic.DoAbilities(self)
end

-- Unstuck Code
function OrkVehicleTactic:SolveStuckCase()

	local iPosition = self.squad_ai:GetPosition()
    	if iPosition.x ~= self.initialPosition.x or iPosition.z ~= self.initialPosition.z then
        	self.isStuck = false
    	elseif (self.squad_ai:IsInStateMove() or self.squad_ai:IsInStateAttackMove()) and not self.squad_ai:IsInCombat()
    		and iPosition.x == self.initialPosition.x and iPosition.z == self.initialPosition.z then
        	self.isStuck = true
    	end
    	if self.isStuck then
        	self:ForceSquadJumpNear(iPosition)
	end
    	self.initialPosition = self.squad_ai:GetPosition()
end

function OrkVehicleTactic:ForceSquadJumpNear(pos)

	-- Try to jump somewhere near, perform 16 checks for a viable position
    	local jumpDisSqr = sqr(self.squad_ai:GetJumpDistance())
    	for iLoop1 = 1, 16 do
        	-- Create a jump position
        	local vJumpPosition = pos
        	local vDir = cpu_manager:GetDirectionToEnemy(pos)
        	vJumpPosition.x = vJumpPosition.x + vDir.x * math.random(-20, 50)
        	vJumpPosition.z = vJumpPosition.z + vDir.z * math.random(-20, 50)
        	-- Check if target position is in range and if unit is able to jump to target position
        	local iDistance = distance_sqr(vJumpPosition, pos)
        	if iDistance < jumpDisSqr and self.squad_ai:CanJumpToPosition(vJumpPosition) then
            		-- Jump to position
            		self.squad_ai:DoJump(vJumpPosition)
            		self.last_jump = g_iGMT
            		self.m_iLastGatherMove = self.last_jump - 10
            		return
		end
	end
end
