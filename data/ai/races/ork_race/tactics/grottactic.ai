----------------------------------------
-- File: 'grottactic.ai'
-- Edited by Thudmeizer		@ 254.02.2016

class 'GrotTactic' (EngineerTactic)

Grot = {}

function GrotTactic:__init( squad_ai ) super( squad_ai )

	self:SetName("Grot Tactic")
end

function GrotTactic:IsAffectedByMorale()
	return false
end

function GrotTactic:InitAbilities()

	-- Init ability ID's
	if (Grot.run_id == nil) then
		Grot.run_id = cpu_manager.stats:GetAbilityID( "all_run!" )	
	end
end

function GrotTactic:DoAbilities()

	-- Check to make sure if no threats are nearby
	if ((not self.squad_ai:IsInCombat() and self.squad_ai:IsInStateMove()) or self.stateID ~= Tactic.StateID.NoState) then

		-- If I am safe I can run
		if (self.squad_ai:CanDoAbility( Grot.run_id )) then
			self.squad_ai:DoSpecialAbility( Grot.run_id )
		end
	end
end

function GrotTactic:Reinforce()

	-- Don't reinforce more than 3 grots -- they get stuck
	if (not self.squad_ai:IsReinforcing() and self.squad_ai:GetNumTroopers() < 3) then
		if (self.squad_ai:CanReinforce( false, 0 )) then
			self.squad_ai:DoReinforce( false, 0 )
		end
	end
end
