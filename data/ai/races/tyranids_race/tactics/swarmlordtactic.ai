----------------------------------------
-- File: 'swarmlordtactic.ai'
-- Edited by Thudmeizer @ 25.04.2016

class 'SwarmLordTactic' (TyranidInfantryTactic)

SwarmLord = {}

function SwarmLordTactic:__init( squad_ai ) super( squad_ai )

	self:SetName("Swarm Lord Tactic")
end

function SwarmLordTactic:AutoBuildAddOn( addonSlot )
	for e in self.squad_ai:GetEntities() do
		local buildChannelSwarmLord = build_manager:GetBuildChannelFromID(e:GetID())
		if (buildChannelSwarmLord ~= nil) then
			local addOnID = buildChannelSwarmLord:GetItemIDAt(BuildChannelAI.PQ_AddOn, addonSlot)
			if (buildChannelSwarmLord:IsBuilding() == 0 and buildChannelSwarmLord:CanAddToQueue(BuildChannelAI.PQ_AddOn, addOnID) == BuildChannelAI.CANBUILD_Ok) then
				buildChannelSwarmLord:BuildAddOn(addOnID)
				return
			end
		end
	end
	return
end

function SwarmLordTactic:AutoBuildResearch( researchSlot )
	for e in self.squad_ai:GetEntities() do
		local buildChannelSwarmLord = build_manager:GetBuildChannelFromID(e:GetID())
		if (buildChannelSwarmLord ~= nil) then
			local ResearchID = buildChannelSwarmLord:GetItemIDAt(BuildChannelAI.PQ_Research, researchSlot)
			if (buildChannelSwarmLord:IsBuilding() == 0 and buildChannelSwarmLord:CanAddToQueue(BuildChannelAI.PQ_Research, ResearchID) == BuildChannelAI.CANBUILD_Ok) then			
				buildChannelSwarmLord:BuildResearch(ResearchID)
				return
			end
		end
	end
	return
end

function SwarmLordTactic:IsAttacker()
	self:IsCommanderAttacker()
end

function SwarmLordTactic:IsDefender()
	self:IsCommanderDefender()
end

function SwarmLordTactic:InitAbilities()

	if (SwarmLord.scream_id == nil) then
		SwarmLord.scream_id = cpu_manager.stats:GetAbilityID( "tyranids_swarmlord_scream" )
	end

	if (SwarmLord.biobomb_id == nil) then
		SwarmLord.biobomb_id = cpu_manager.stats:GetAbilityID( "tyranids_bio_bomb" )
	end

	if (SwarmLord.run_id == nil) then
		SwarmLord.run_id = cpu_manager.stats:GetAbilityID( "all_run!" )	
	end
end

function SwarmLordTactic:DoAbilities()
	
	-- Horror Scream: Offensive timed ability. Unleashes a horrifying Scream, ruining the morale of nearby enemy units within a 25m radius.
	if (self.squad_ai:CanDoAbility(SwarmLord.scream_id)) then
		Ability.DoAbilityArea( self.squad_ai, SwarmLord.scream_id, Ability.Filters.CloseSquadEnemy, 20, 5 )
		Ability.DoAbilityArea( self.squad_ai, SwarmLord.scream_id, Ability.Filters.CloseMonsterEnemy, 20, 3 )
	end

	-- Bio Bomb: Unleash poisonous gases and deadly blasts of energy at the designated target. Wipes out most objects in a 45m radius, plus an expanding gas cloud effect covering approximately 60m.
	local iRequisition = resource_manager:GetResourceAmount():Get( ResourceAmount.RT_Requisition )
	if (self.squad_ai:CanDoAbility(SwarmLord.biobomb_id) and iRequisition >= 5000) then
		Ability.DoAbilityPos( self.squad_ai, SwarmLord.biobomb_id, Ability.Filters.CloseEnemy, 25 ) 
		Ability.DoAbilityPos( self.squad_ai, SwarmLord.biobomb_id, Ability.Filters.CloseVehicleEnemy, 3 ) 
	end
	
	-- Run if safe
	if ((not self.squad_ai:IsInCombat() and self.squad_ai:IsInStateMove()) or self.stateID ~= Tactic.StateID.NoState) then

		-- If I am safe I can run
		if (self.squad_ai:CanDoAbility( SwarmLord.run_id )) then
			self.squad_ai:DoSpecialAbility( SwarmLord.run_id )
		end
	end	
end

function SwarmLordTactic:Upgrade()

--	self:AutoBuildAddOn(0)	--	[addon_01] addon_commanders_cap_squad			4/1
--	self:AutoBuildAddOn(1)	-- 	[addon_02] addon_commanders_cap_support			5/1
--	self:AutoBuildAddOn(2)	-- 	[addon_03] addon_commanders_cap_relic			6/1
--	self:AutoBuildAddOn(3)	-- 	[addon_04] addon_commanders_increase_production		5/1
--	self:AutoBuildAddOn(4)	-- 	[addon_05] addon_commanders_increase_health		6/1
--	self:AutoBuildAddOn(5)	-- 	[addon_06] addon_commanders_increase_morale		6/1
--	self:AutoBuildAddOn(6)	-- 	[addon_07] addon_commanders_cap_squad_2			6
--	self:AutoBuildAddOn(7)	-- 	[addon_08] addon_commanders_cap_support_2		8
--	self:AutoBuildAddOn(8)	-- 	[addon_09] addon_commanders_increase_production_2	8

--	self:AutoBuildResearch(0)	-- [research_01] tyranids_swarmlord_blades_research
--	self:AutoBuildResearch(1)	-- [research_02] tyranids_swarmlord_carapace_research
--	self:AutoBuildResearch(2)	-- [research_03] tyranids_swarmlord_regeneration_research
--	self:AutoBuildResearch(3)	-- [research_04] tyranids_swarmlord_abilities_research

   	if (cpu_manager:GetTierLevel() <= 4) then 
		local addon_random_commander_upgrades = math.random( 0,8 )	-- Randomize these addons
		self:AutoBuildAddOn(addon_random_commander_upgrades)
	end

   	if (cpu_manager:GetTierLevel() > 4) then 
		self:AutoBuildAddOn(2)	-- Always build in late tiers to support the construction of Titans and late game ubers.
	end

	if not (cpu_manager.cpu_player:IsResearchComplete("tyranids_swarmlord_blades_research")) then
		self:AutoBuildResearch(0) -- Blades
	elseif not (cpu_manager.cpu_player:IsResearchComplete("tyranids_swarmlord_carapace_research")) then
		self:AutoBuildResearch(1) -- Carapace
	elseif not (cpu_manager.cpu_player:IsResearchComplete("tyranids_swarmlord_regeneration_research")) then
		self:AutoBuildResearch(2) -- Regeneration
	elseif not (cpu_manager.cpu_player:IsResearchComplete("tyranids_swarmlord_abilities_research")) then
		self:AutoBuildResearch(3) -- Extra abilities
	end
end

function SwarmLordTactic:Update()

	if (self:IsComplete()) then
		return
	end
	
	-- State machine
	if (not InfantryTactic.Update(self)) then
		return
	end
	
	-- Attach to melee in tier2+
	if (cpu_manager:GetTierLevel() > 1) then
	
		if (self:TryAttachSquad(true, true, 50, 100, nil) ~= nil) then
			return
		end
	end
	if (self:TryAttachSquad(false, true, 50, 100, self.m_fCommanderAttachHealth) == nil) then
		self:TryAttachSquadMelee()
	end
end