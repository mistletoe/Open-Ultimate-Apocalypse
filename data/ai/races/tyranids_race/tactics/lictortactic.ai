----------------------------------------
-- File: 'lictortactic.ai'
-- Edited by Thudmeizer @ 25.04.2016

class 'LictorTactic' (TyranidInfantryTactic)

Lictor = {}

function LictorTactic:__init( squad_ai ) super( squad_ai )

	self:SetName("Lictor Tactic")
end

function LictorTactic:IsAttacker()
	return self:IsCommanderAttacker()
end

function LictorTactic:IsDefender()
	return self:IsCommanderDefender()
end

function LictorTactic:InitAbilities()

	-- Init ability ID's
	if (Lictor.run_id == nil) then
		Lictor.run_id = cpu_manager.stats:GetAbilityID( "all_run!" )	
	end
end

function LictorTactic:DoAbilities()
	
	-- Run if safe
	if ((not self.squad_ai:IsInCombat() and self.squad_ai:IsInStateMove()) or self.stateID ~= Tactic.StateID.NoState) then

		-- If I am safe I can run
		if (self.squad_ai:CanDoAbility( Lictor.run_id )) then
			self.squad_ai:DoSpecialAbility( Lictor.run_id )
		end
	end
end

function LictorTactic:Update()

	if (self:IsComplete()) then
		return
	end
	
	-- State machine
	if (not InfantryTactic.Update(self)) then
		return
	end
	
	-- Attach to melee in tier2+
	if (cpu_manager:GetTierLevel() > 1) then
	
		if (self:TryAttachSquad(true, true, 50, 100, nil) ~= nil) then
			return
		end
	end
	if (self:TryAttachSquad(false, true, 50, 100, self.m_fCommanderAttachHealth) == nil) then
		self:TryAttachSquadMelee()
	end
end
